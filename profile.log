
====== .\luametry\coordinate.lua ======
@@ 314 @@
      |         error"NYI"
      |     end
      |     function luametry.__coord3dConstantMethods:GetMagnitude()
   6% |         return self.v_sqrt(self.v_pow(self.x, 2) + self.v_pow(self.y, 2)  + self.v_pow(self.z, 2))
      |     end
      |     function luametry.__coord3dConstantMethods:GetDistSqr(other)
      |         return self.v_pow(self.x-other.x, 2) + self.v_pow(self.y-other.y, 2) + self.v_pow(self.z-other.z, 2)
@@ 364 @@
      |     end
      |     luametry.__coord3dConstantMethods.__unm = luametry.__coord3dConstantMethods.GetNegative
      |     function luametry.__coord3dConstantMethods:Add(other)
   6% |         return ffi.typeof(self)(self.x+other.x, self.y+other.y, self.z+other.z)
      |     end
      |     luametry.__coord3dConstantMethods.__add = luametry.__coord3dConstantMethods.Add
      |     function luametry.__coord3dConstantMethods:Sub(other)

====== .\luametry\space.lua ======
@@ 433 @@
      |         local edgeBInDirection = closestBVertexInDirectionMap[mostAttachedClosestBVertex]
      |         
      |         local closestBVertexToclosestAVertexDir = (closestAVertex.p-closestBVertex.p):GetNormalized()
   6% |         local isInside = (closestBVertexToclosestAVertexDir:GetDotProduct(edgeBInDirection) >= 0)
      |         
      |         -- print("~", closestBVertexToclosestAVertexDir)
      |         if CAKE then print("WOOF!!", #closestBInfoList, edgeBInDirection) end
@@ 691 @@
      |     
      |     function luametry.Space:GetEdgeLoopOrientation(edgeLoop, normal)
      |         local total = self.coordinateType(0, 0, 0)
   6% |         if BLAHB then print("ARRRREAAAA") end
      |         for currEdgeI, currEdge, nextEdgeI, nextEdge, currEdgeUniqueV, commonV, nextEdgeUniqueV in self:IterateEdgesOfEdgeLoop(edgeLoop) do
      |             local prod = currEdgeUniqueV.p:GetCrossProduct(commonV.p)
      |             if BLAHB then print(dbglabelmap and dbglabelmap[edgeLoop], currEdgeI, prod:GetDotProduct(normal)) end

====== level_test.lua ======
@@ 406 @@
      |         end
      |     end
      |     
  35% |     if shouldKill then os.execute[[taskkill /IM editor.exe]] os.execute[[taskkill /F /IM editor.exe]] end
  35% |     if shouldOpen then os.execute[[openeditor.bat obj/ns2_blah.level]] end
      | end
      | 
   6% | if err then
      |     error(err)
      | end
